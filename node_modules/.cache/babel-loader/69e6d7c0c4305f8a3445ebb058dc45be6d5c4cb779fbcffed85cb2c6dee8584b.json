{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\precticaltest\\\\frontend\\\\src\\\\components\\\\items\\\\ReadItems.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\nimport { useForm } from 'react-hook-form';\nimport Commonservice from '../Commonservices';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ReadItems = () => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [itemsData, setItemsData] = useState([]); // State to store dynamic data\n  const [showModal, setShowModal] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [currentItem, setCurrentItem] = useState(null);\n\n  // Fetch data dynamically when component mounts\n  useEffect(() => {\n    fetchItemsData(); // Simulate an API call to fetch data\n  }, []);\n\n  // Function to fetch data (simulating an API call)\n  const fetchItemsData = async () => {\n    try {\n      // Simulated delay to mock a real API request\n      const response = await Commonservice.getItems(); // Replace with real API call\n      //console.log(response);\n      setItemsData(response); // Assuming response is the list of items\n    } catch (error) {\n      console.error('Error fetching items data:', error);\n    }\n  };\n  const handleShow = () => {\n    setShowModal(true);\n    setEditMode(false);\n  };\n  const handleClose = () => {\n    setShowModal(false);\n    setCurrentItem(null);\n  };\n  const onSubmit = data => {\n    if (editMode && currentItem) {\n      // Logic for updating the item\n      console.log('Updating item:', currentItem.id, data);\n      alert('Item updated successfully!');\n      // Update the state with the new item\n      const updatedItems = itemsData.map(item => item.id === currentItem.id ? {\n        ...item,\n        name: data.name,\n        year: parseInt(data.iddsi_level)\n      } : item);\n      setItemsData(updatedItems);\n    } else {\n      // Logic for creating a new item\n      Commonservice.setItems(data.name, data.category, data.iddsi_level).then(() => {\n        alert('Item inserted successfully!');\n        // Add new item to state\n        const newItem = {\n          id: itemsData.length + 1,\n          // Assuming the next id is incremented\n          name: data.name,\n          year: parseInt(data.iddsi_level) // Example: Using year as IDDSI Level for now\n        };\n        setItemsData([...itemsData, newItem]);\n      }).catch(error => {\n        console.error('Error during item insertion:', error);\n      });\n    }\n    handleClose();\n  };\n\n  // Edit item handler\n  const handleEdit = item => {\n    setEditMode(true);\n    setCurrentItem(item);\n    setShowModal(true);\n    setValue('name', item.name);\n    setValue('category', 'Category1');\n    setValue('iddsi_level', item.year.toString()); // Assuming year is related to IDDSI Level\n  };\n\n  // Delete item handler\n  const handleDelete = id => {\n    const filteredItems = itemsData.filter(item => item.id !== id);\n    setItemsData(filteredItems);\n    console.log(`Item with ID ${id} deleted.`);\n  };\n\n  // Define columns for DataTable\n  const columns = [{\n    name: 'ID',\n    selector: row => row.id,\n    sortable: true\n  }, {\n    name: 'Name',\n    selector: row => row.name,\n    sortable: true\n  }, {\n    name: 'Category',\n    selector: row => row.category,\n    sortable: true\n  }, {\n    name: 'Actions',\n    cell: row => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary mr-2\",\n        onClick: () => handleEdit(row),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger\",\n        onClick: () => handleDelete(row.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true),\n    ignoreRowClick: true,\n    allowOverflow: true,\n    button: true\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: \"Items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12 align-right\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary m-3 w100\",\n            onClick: handleShow,\n            children: \"Add Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), showModal && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal show d-block\",\n            role: \"dialog\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-dialog\",\n              role: \"document\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"modal-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"modal-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"modal-title\",\n                    children: editMode ? 'Edit Item' : 'Add New Item'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"close\",\n                    \"aria-label\": \"Close\",\n                    onClick: handleClose,\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      \"aria-hidden\": \"true\",\n                      children: \"\\xD7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 164,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"modal-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: handleSubmit(onSubmit),\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"name\",\n                        children: \"Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 170,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        ...register('name', {\n                          required: true\n                        }),\n                        type: \"text\",\n                        className: \"form-control\",\n                        id: \"name\",\n                        placeholder: \"Enter item name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 171,\n                        columnNumber: 27\n                      }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: \"This field is required\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 178,\n                        columnNumber: 43\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"category\",\n                        children: \"Category\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 183,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                        ...register('category', {\n                          required: true\n                        }),\n                        className: \"form-control\",\n                        id: \"category\",\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"\",\n                          children: \"Select Category\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 189,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"Category1\",\n                          children: \"Category 1\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 190,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"Category2\",\n                          children: \"Category 2\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 191,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"Category3\",\n                          children: \"Category 3\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 192,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 184,\n                        columnNumber: 27\n                      }, this), errors.category && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: \"Category is required\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 194,\n                        columnNumber: 47\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"iddsi_level\",\n                        children: \"IDDSI Level\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 199,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                        ...register('iddsi_level', {\n                          required: true\n                        }),\n                        className: \"form-control\",\n                        id: \"iddsi_level\",\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"\",\n                          children: \"Select IDDSI Level\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 205,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"1\",\n                          children: \"Level 1\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 206,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"2\",\n                          children: \"Level 2\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 207,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"3\",\n                          children: \"Level 3\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 208,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 200,\n                        columnNumber: 27\n                      }, this), errors.iddsi_level && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: \"IDDSI Level is required\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 210,\n                        columnNumber: 50\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn btn-primary w-100\",\n                      children: editMode ? 'Update Item' : 'Add Item'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"modal-footer\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-secondary\",\n                    onClick: handleClose,\n                    children: \"Close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-backdrop fade show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(DataTable, {\n          title: \"Items List\",\n          columns: columns,\n          data: itemsData // Using dynamic data from state\n          ,\n          pagination: true,\n          selectableRows: true,\n          highlightOnHover: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(ReadItems, \"TFdQL4/0qwBulkMtMrIAZcx3P3A=\", false, function () {\n  return [useForm];\n});\n_c = ReadItems;\nexport default ReadItems;\nvar _c;\n$RefreshReg$(_c, \"ReadItems\");","map":{"version":3,"names":["React","useState","useEffect","DataTable","useForm","Commonservice","jsxDEV","_jsxDEV","Fragment","_Fragment","ReadItems","_s","register","handleSubmit","setValue","formState","errors","itemsData","setItemsData","showModal","setShowModal","editMode","setEditMode","currentItem","setCurrentItem","fetchItemsData","response","getItems","error","console","handleShow","handleClose","onSubmit","data","log","id","alert","updatedItems","map","item","name","year","parseInt","iddsi_level","setItems","category","then","newItem","length","catch","handleEdit","toString","handleDelete","filteredItems","filter","columns","selector","row","sortable","cell","children","type","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ignoreRowClick","allowOverflow","button","role","htmlFor","required","placeholder","value","title","pagination","selectableRows","highlightOnHover","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/precticaltest/frontend/src/components/items/ReadItems.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\nimport { useForm } from 'react-hook-form';\r\nimport Commonservice from '../Commonservices';\r\n\r\ninterface ItemData {\r\n  id: number;\r\n  name: string;\r\n  year: number;\r\n}\r\n\r\ninterface ItemsForm {\r\n  name: string;\r\n  category: string;\r\n  iddsi_level: string;\r\n}\r\n\r\nconst ReadItems: React.FC = () => {\r\n  const { register, handleSubmit, setValue, formState: { errors } } = useForm<ItemsForm>();\r\n  const [itemsData, setItemsData] = useState<ItemData[]>([]); // State to store dynamic data\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [currentItem, setCurrentItem] = useState<ItemData | null>(null);\r\n\r\n  // Fetch data dynamically when component mounts\r\n  useEffect(() => {\r\n    fetchItemsData(); // Simulate an API call to fetch data\r\n  }, []);\r\n\r\n  // Function to fetch data (simulating an API call)\r\n  const fetchItemsData = async () => {\r\n    try {\r\n      // Simulated delay to mock a real API request\r\n      const response = await Commonservice.getItems(); // Replace with real API call\r\n      //console.log(response);\r\n      setItemsData(response); // Assuming response is the list of items\r\n    } catch (error) {\r\n      console.error('Error fetching items data:', error);\r\n    }\r\n  };\r\n\r\n  const handleShow = () => {\r\n    setShowModal(true);\r\n    setEditMode(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShowModal(false);\r\n    setCurrentItem(null);\r\n  };\r\n\r\n  const onSubmit = (data: ItemsForm) => {\r\n    if (editMode && currentItem) {\r\n      // Logic for updating the item\r\n      console.log('Updating item:', currentItem.id, data);\r\n      alert('Item updated successfully!');\r\n      // Update the state with the new item\r\n      const updatedItems = itemsData.map(item => \r\n        item.id === currentItem.id ? { ...item, name: data.name, year: parseInt(data.iddsi_level) } : item\r\n      );\r\n      setItemsData(updatedItems);\r\n    } else {\r\n      // Logic for creating a new item\r\n      Commonservice.setItems(data.name, data.category, data.iddsi_level)\r\n        .then(() => {\r\n          alert('Item inserted successfully!');\r\n          // Add new item to state\r\n          const newItem: ItemData = {\r\n            id: itemsData.length + 1, // Assuming the next id is incremented\r\n            name: data.name,\r\n            year: parseInt(data.iddsi_level), // Example: Using year as IDDSI Level for now\r\n          };\r\n          setItemsData([...itemsData, newItem]);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error during item insertion:', error);\r\n        });\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n  // Edit item handler\r\n  const handleEdit = (item: ItemData) => {\r\n    setEditMode(true);\r\n    setCurrentItem(item);\r\n    setShowModal(true);\r\n    setValue('name', item.name);\r\n    setValue('category', 'Category1');\r\n    setValue('iddsi_level', item.year.toString()); // Assuming year is related to IDDSI Level\r\n  };\r\n\r\n  // Delete item handler\r\n  const handleDelete = (id: number) => {\r\n    const filteredItems = itemsData.filter(item => item.id !== id);\r\n    setItemsData(filteredItems);\r\n    console.log(`Item with ID ${id} deleted.`);\r\n  };\r\n\r\n  // Define columns for DataTable\r\n  const columns = [\r\n    {\r\n      name: 'ID',\r\n      selector: (row: ItemData) => row.id,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Name',\r\n      selector: (row: ItemData) => row.name,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Category',\r\n      selector: (row: ItemData) => row.category,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Actions',\r\n      cell: (row: ItemData) => (\r\n        <>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary mr-2\"\r\n            onClick={() => handleEdit(row)}\r\n          >\r\n            Edit\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger\"\r\n            onClick={() => handleDelete(row.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </>\r\n      ),\r\n      ignoreRowClick: true,\r\n      allowOverflow: true,\r\n      button: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-12\">\r\n          <h2 className=\"text-center\">Items</h2>\r\n          <div className=\"col-md-12 align-right\">\r\n            <button type=\"button\" className=\"btn btn-primary m-3 w100\" onClick={handleShow}>\r\n              Add Item\r\n            </button>\r\n          </div>\r\n\r\n          {/* Modal */}\r\n          {showModal && (\r\n            <>\r\n              <div className=\"modal show d-block\" role=\"dialog\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                  <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                      <h5 className=\"modal-title\">\r\n                        {editMode ? 'Edit Item' : 'Add New Item'}\r\n                      </h5>\r\n                      <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={handleClose}>\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                      <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div className=\"form-group mb-3\">\r\n                          <label htmlFor=\"name\">Name</label>\r\n                          <input\r\n                            {...register('name', { required: true })}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"name\"\r\n                            placeholder=\"Enter item name\"\r\n                          />\r\n                          {errors.name && <span className=\"text-danger\">This field is required</span>}\r\n                        </div>\r\n\r\n                        {/* Category Select Box */}\r\n                        <div className=\"form-group mb-3\">\r\n                          <label htmlFor=\"category\">Category</label>\r\n                          <select\r\n                            {...register('category', { required: true })}\r\n                            className=\"form-control\"\r\n                            id=\"category\"\r\n                          >\r\n                            <option value=\"\">Select Category</option>\r\n                            <option value=\"Category1\">Category 1</option>\r\n                            <option value=\"Category2\">Category 2</option>\r\n                            <option value=\"Category3\">Category 3</option>\r\n                          </select>\r\n                          {errors.category && <span className=\"text-danger\">Category is required</span>}\r\n                        </div>\r\n\r\n                        {/* IDDSI Level Select Box */}\r\n                        <div className=\"form-group mb-3\">\r\n                          <label htmlFor=\"iddsi_level\">IDDSI Level</label>\r\n                          <select\r\n                            {...register('iddsi_level', { required: true })}\r\n                            className=\"form-control\"\r\n                            id=\"iddsi_level\"\r\n                          >\r\n                            <option value=\"\">Select IDDSI Level</option>\r\n                            <option value=\"1\">Level 1</option>\r\n                            <option value=\"2\">Level 2</option>\r\n                            <option value=\"3\">Level 3</option>\r\n                          </select>\r\n                          {errors.iddsi_level && <span className=\"text-danger\">IDDSI Level is required</span>}\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary w-100\">\r\n                          {editMode ? 'Update Item' : 'Add Item'}\r\n                        </button>\r\n                      </form>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                      <button type=\"button\" className=\"btn btn-secondary\" onClick={handleClose}>\r\n                        Close\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-backdrop fade show\"></div>\r\n            </>\r\n          )}\r\n\r\n          {/* DataTable */}\r\n          <DataTable\r\n            title=\"Items List\"\r\n            columns={columns}\r\n            data={itemsData} // Using dynamic data from state\r\n            pagination\r\n            selectableRows\r\n            highlightOnHover\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReadItems;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}