{"ast":null,"code":"var _jsxFileName = \"/Users/ajaykumarmarko/Desktop/practical/src/components/pageComponents/FoodItems/FoodItems.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\n// Import your types\nimport FoodItemlist from \"./components/FoodItemlist\";\nimport useGetFoodItemService from \"./hooks/useGetFoodItemService\";\nimport { FoodItemToolBar } from \"./components/FoodItemToolBar\";\nimport { AddEditFoodItemForm } from \"./components/AddEditFoodItemForm\";\nimport { ImportFoodItemForm } from \"./components/ImportFoodItemForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FoodItems = () => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm();\n  const [itemsData, setItemsData] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [currentItem, setCurrentItem] = useState(null);\n  const [showCsvModal, setShowCsvModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const {\n    getItems,\n    setItems,\n    updateItems,\n    deleteItems\n  } = useGetFoodItemService();\n\n  // Fetch data dynamically when the component mounts\n  useEffect(() => {\n    fetchItemsData();\n  }, []);\n\n  // Fetch items data from the backend\n  const fetchItemsData = async () => {\n    setLoading(true); // Show loading state\n    try {\n      const response = await getItems(); // Adjust based on your service\n      const items = response.data || response;\n      const formattedItems = items.map(item => ({\n        id: item.id,\n        name: item.name,\n        category: item.category,\n        iddsi_level: item.iddsi_level\n      }));\n      setItemsData(formattedItems);\n    } catch (error) {\n      console.error(\"Error fetching items data:\", error);\n    } finally {\n      setLoading(false); // Hide loading state\n    }\n  };\n\n  // Handle opening the form modal\n  const handleShow = () => {\n    setShowModal(true);\n    setEditMode(false);\n    reset(); // Clear form fields when adding a new item\n  };\n\n  // Handle closing the modals (both CSV and form modals)\n  const handleClose = () => {\n    setShowModal(false);\n    setShowCsvModal(false);\n    setCurrentItem(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: \"Items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FoodItemToolBar, {\n          handleShow: handleShow,\n          setShowCsvModal: setShowCsvModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), showModal && /*#__PURE__*/_jsxDEV(AddEditFoodItemForm, {\n          editMode: editMode,\n          handleClose: handleClose,\n          currentItem: currentItem,\n          setItemsData: setItemsData,\n          itemsData: itemsData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), showCsvModal && /*#__PURE__*/_jsxDEV(ImportFoodItemForm, {\n          handleClose: handleClose,\n          fetchItemsData: fetchItemsData,\n          itemsData: itemsData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FoodItemlist, {\n          itemsData: itemsData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading items...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(FoodItems, \"77sWDJDm7ZSUXY4LwxYRZ1kMQ4c=\", false, function () {\n  return [useForm, useGetFoodItemService];\n});\n_c = FoodItems;\nexport default FoodItems;\nvar _c;\n$RefreshReg$(_c, \"FoodItems\");","map":{"version":3,"names":["React","useState","useEffect","useForm","FoodItemlist","useGetFoodItemService","FoodItemToolBar","AddEditFoodItemForm","ImportFoodItemForm","jsxDEV","_jsxDEV","FoodItems","_s","register","handleSubmit","setValue","formState","errors","reset","itemsData","setItemsData","showModal","setShowModal","editMode","setEditMode","currentItem","setCurrentItem","showCsvModal","setShowCsvModal","loading","setLoading","getItems","setItems","updateItems","deleteItems","fetchItemsData","response","items","data","formattedItems","map","item","id","name","category","iddsi_level","error","console","handleShow","handleClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ajaykumarmarko/Desktop/practical/src/components/pageComponents/FoodItems/FoodItems.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Papa from \"papaparse\";\nimport { ItemData, ItemsForm } from \"../../../types/ItemsForm\"; // Import your types\nimport FoodItemlist from \"./components/FoodItemlist\";\nimport useGetFoodItemService from \"./hooks/useGetFoodItemService\";\nimport { FoodItemToolBar } from \"./components/FoodItemToolBar\";\nimport { AddEditFoodItemForm } from \"./components/AddEditFoodItemForm\";\nimport { ImportFoodItemForm } from \"./components/ImportFoodItemForm\";\n\nconst FoodItems: React.FC = () => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n    reset,\n  } = useForm<ItemsForm>();\n  const [itemsData, setItemsData] = useState<ItemData[]>([]);\n  const [showModal, setShowModal] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [currentItem, setCurrentItem] = useState<ItemData | null>(null);\n  const [showCsvModal, setShowCsvModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const { getItems, setItems, updateItems, deleteItems } =\n    useGetFoodItemService();\n\n  // Fetch data dynamically when the component mounts\n  useEffect(() => {\n    fetchItemsData();\n  }, []);\n\n  // Fetch items data from the backend\n  const fetchItemsData = async () => {\n    setLoading(true); // Show loading state\n    try {\n      const response = await getItems(); // Adjust based on your service\n      const items = response.data || response;\n      const formattedItems = items.map((item: any) => ({\n        id: item.id,\n        name: item.name,\n        category: item.category,\n        iddsi_level: item.iddsi_level,\n      }));\n      setItemsData(formattedItems);\n    } catch (error) {\n      console.error(\"Error fetching items data:\", error);\n    } finally {\n      setLoading(false); // Hide loading state\n    }\n  };\n\n  // Handle opening the form modal\n  const handleShow = () => {\n    setShowModal(true);\n    setEditMode(false);\n    reset(); // Clear form fields when adding a new item\n  };\n\n  // Handle closing the modals (both CSV and form modals)\n  const handleClose = () => {\n    setShowModal(false);\n    setShowCsvModal(false);\n    setCurrentItem(null);\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-12\">\n          <h2 className=\"text-center\">Items</h2>\n\n          <FoodItemToolBar\n            handleShow={handleShow}\n            setShowCsvModal={setShowCsvModal}\n          />\n\n          {/* Modal for Add/Edit Item */}\n          {showModal && (\n            <AddEditFoodItemForm\n              editMode={editMode}\n              handleClose={handleClose}\n              currentItem={currentItem as ItemData}\n              setItemsData={setItemsData}\n              itemsData={itemsData}\n            />\n          )}\n\n          {/* CSV Upload Modal */}\n          {showCsvModal && (\n            <ImportFoodItemForm\n              handleClose={handleClose}\n              fetchItemsData={fetchItemsData}\n              itemsData={itemsData}\n            />\n          )}\n\n          {/* Display the list of items */}\n          <FoodItemlist itemsData={itemsData as ItemData[]} />\n\n          {/* Show loading state if data is being fetched */}\n          {loading && <div>Loading items...</div>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FoodItems;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}