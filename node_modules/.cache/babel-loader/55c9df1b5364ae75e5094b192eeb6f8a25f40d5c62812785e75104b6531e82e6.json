{"ast":null,"code":"var _jsxFileName = \"D:\\\\practical\\\\src\\\\components\\\\pages\\\\Items.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\nimport { useForm } from 'react-hook-form';\nimport ItemService from '../../services/ItemService'; // Adjust import as necessary\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Import your types\n\nconst Items = () => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [itemsData, setItemsData] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [currentItem, setCurrentItem] = useState(null);\n  const [showCsvModal, setShowCsvModal] = useState(false);\n\n  // Fetch data dynamically when the component mounts\n  useEffect(() => {\n    fetchItemsData();\n  }, []);\n\n  // Edit item handler\n  const handleEdit = item => {\n    setEditMode(true);\n    setCurrentItem(item);\n    setShowModal(true);\n    setValue('id', item.id);\n    setValue('name', item.name);\n    setValue('category', item.category);\n    setValue('iddsi_level', item.iddsi_level);\n  };\n\n  // Delete item handler\n  const handleDelete = async id => {\n    try {\n      await ItemService.deleteItems(id); // Call to delete the item from the backend\n      const filteredItems = itemsData.filter(item => item.id !== id);\n      setItemsData(filteredItems); // Update the state by removing the deleted item\n      alert(`Item with ID ${id} deleted successfully.`);\n    } catch (error) {\n      console.error(`Error deleting item with ID ${id}:`, error);\n      alert(`Error deleting item with ID ${id}`);\n    }\n  };\n  const fetchItemsData = async () => {\n    try {\n      const response = await ItemService.getItems(); // Adjust based on your service\n      const items = response.data || response;\n      const formattedItems = items.map(item => ({\n        id: item.id,\n        name: item.name,\n        category: item.category,\n        iddsi_level: item.iddsi_level\n      }));\n      setItemsData(formattedItems);\n    } catch (error) {\n      console.error('Error fetching items data:', error);\n    }\n  };\n\n  // Handle form submission\n  const onSubmit = async data => {\n    // Your logic for submitting data\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Items List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      title: \"Items List\",\n      columns: [{\n        name: 'ID',\n        selector: row => row.id,\n        sortable: true\n      }, {\n        name: 'Name',\n        selector: row => row.name,\n        sortable: true\n      }, {\n        name: 'Category',\n        selector: row => row.category,\n        sortable: true\n      }, {\n        name: 'IDDSI Level',\n        selector: row => row.iddsi_level,\n        sortable: true\n      }, {\n        name: 'Actions',\n        cell: row => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary mr-2\",\n            onClick: () => handleEdit(row),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-danger\",\n            onClick: () => handleDelete(row.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true),\n        ignoreRowClick: true // Keep this if you want to prevent row clicks from firing\n      }],\n      data: itemsData,\n      pagination: true,\n      selectableRows: true,\n      highlightOnHover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Items, \"jM50q0IS7Aq6zFNMTSzWbAMwqIo=\", false, function () {\n  return [useForm];\n});\n_c = Items;\nexport default Items; // Ensure this export is present\nvar _c;\n$RefreshReg$(_c, \"Items\");","map":{"version":3,"names":["React","useState","useEffect","DataTable","useForm","ItemService","jsxDEV","_jsxDEV","Fragment","_Fragment","Items","_s","register","handleSubmit","setValue","formState","errors","itemsData","setItemsData","showModal","setShowModal","editMode","setEditMode","currentItem","setCurrentItem","showCsvModal","setShowCsvModal","fetchItemsData","handleEdit","item","id","name","category","iddsi_level","handleDelete","deleteItems","filteredItems","filter","alert","error","console","response","getItems","items","data","formattedItems","map","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","columns","selector","row","sortable","cell","type","onClick","ignoreRowClick","pagination","selectableRows","highlightOnHover","_c","$RefreshReg$"],"sources":["D:/practical/src/components/pages/Items.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\nimport { useForm } from 'react-hook-form';\nimport ItemService from '../../services/ItemService'; // Adjust import as necessary\nimport Papa from 'papaparse';\nimport { ItemData, ItemsForm } from '../../types/ItemsForm'; // Import your types\n\nconst Items: React.FC = () => {\n  const { register, handleSubmit, setValue, formState: { errors } } = useForm<ItemsForm>();\n  const [itemsData, setItemsData] = useState<ItemData[]>([]);\n  const [showModal, setShowModal] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [currentItem, setCurrentItem] = useState<ItemData | null>(null);\n  const [showCsvModal, setShowCsvModal] = useState(false);\n\n  // Fetch data dynamically when the component mounts\n  useEffect(() => {\n    fetchItemsData();\n  }, []);\n\n   // Edit item handler\n  const handleEdit = (item: ItemData) => {\n    setEditMode(true);\n    setCurrentItem(item);\n    setShowModal(true);\n    setValue('id', item.id);\n    setValue('name', item.name);\n    setValue('category', item.category);\n    setValue('iddsi_level', item.iddsi_level);\n  };\n\n  // Delete item handler\n  const handleDelete = async (id: number) => {\n    try {\n      await ItemService.deleteItems(id); // Call to delete the item from the backend\n      const filteredItems = itemsData.filter(item => item.id !== id);\n      setItemsData(filteredItems); // Update the state by removing the deleted item\n      alert(`Item with ID ${id} deleted successfully.`);\n    } catch (error) {\n      console.error(`Error deleting item with ID ${id}:`, error);\n      alert(`Error deleting item with ID ${id}`);\n    }\n  };\n\n  const fetchItemsData = async () => {\n    try {\n      const response = await ItemService.getItems(); // Adjust based on your service\n      const items = response.data || response;\n      const formattedItems = items.map((item: any) => ({\n        id: item.id,\n        name: item.name,\n        category: item.category,\n        iddsi_level: item.iddsi_level,\n      }));\n      setItemsData(formattedItems);\n    } catch (error) {\n      console.error('Error fetching items data:', error);\n    }\n  };\n\n  // Handle form submission\n  const onSubmit = async (data: ItemsForm) => {\n    // Your logic for submitting data\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <h2 className=\"text-center\">Items List</h2>\n      <DataTable\n        title=\"Items List\"\n        columns={[\n         {\n      name: 'ID',\n      selector: (row: ItemData) => row.id,\n      sortable: true,\n    },\n    {\n      name: 'Name',\n      selector: (row: ItemData) => row.name,\n      sortable: true,\n    },\n    {\n      name: 'Category',\n      selector: (row: ItemData) => row.category,\n      sortable: true,\n    },\n    {\n      name: 'IDDSI Level',\n      selector: (row: ItemData) => row.iddsi_level,\n      sortable: true,\n    },\n    {\n      name: 'Actions',\n      cell: (row: ItemData) => (\n        <>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary mr-2\"\n            onClick={() => handleEdit(row)}\n          >\n            Edit\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            onClick={() => handleDelete(row.id)}\n          >\n            Delete\n          </button>\n        </>\n      ),\n      ignoreRowClick: true, // Keep this if you want to prevent row clicks from firing\n    },\n        ]}\n        data={itemsData}\n        pagination\n        selectableRows\n        highlightOnHover\n      />\n      {/* Add other JSX elements, modals, etc. */}\n    </div>\n  );\n};\n\nexport default Items; // Ensure this export is present\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}