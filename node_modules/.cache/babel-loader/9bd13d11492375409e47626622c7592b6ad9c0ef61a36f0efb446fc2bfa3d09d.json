{"ast":null,"code":"var _jsxFileName = \"D:\\\\practical\\\\src\\\\components\\\\pageComponents\\\\ResidentsItems\\\\ResidentsItems.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\n// Import your types\nimport ResidentsItemList from \"./components/ResidentsItemlist\"; // Ensure correct import\nimport useGetResidentsItemService from \"./hooks/useGetResidentsItemService\";\nimport { ResidentsItemToolBar } from \"./components/ResidentsItemToolBar\";\nimport { AddEditResidentsItemForm } from \"./components/AddEditResidentsItemForm\";\nimport { ImportResidentsItemForm } from \"./components/ImportResidentsItemForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResidentsItems = () => {\n  _s();\n  const {\n    setValue,\n    reset\n  } = useForm();\n  const [residentsData, setResidentsData] = useState([]); // Renamed to avoid conflict with the type name\n  const [showModal, setShowModal] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [currentResidents, setCurrentResidents] = useState(null); // Renamed to 'setCurrentResidents'\n  const [showCsvModal, setShowCsvModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const {\n    getItems,\n    deleteItems\n  } = useGetResidentsItemService();\n\n  // Fetch data dynamically when the component mounts\n  useEffect(() => {\n    fetchResidentsData();\n  }, []);\n\n  // Fetch items data from the backend\n  const fetchResidentsData = async () => {\n    setLoading(true); // Show loading state\n    try {\n      const response = await getItems(); // Adjust based on your service\n      const items = response.data || response;\n      const formattedItems = items.map(item => ({\n        id: item.id,\n        name: item.name,\n        category: item.category,\n        iddsi_level: item.iddsi_level\n      }));\n      setResidentsData(formattedItems);\n    } catch (error) {\n      console.error(\"Error fetching items data:\", error);\n    } finally {\n      setLoading(false); // Hide loading state\n    }\n  };\n\n  // Handle opening the form modal\n  const handleShow = () => {\n    setShowModal(true);\n    setEditMode(false);\n    reset(); // Clear form fields when adding a new item\n  };\n\n  // Handle closing the modals (both CSV and form modals)\n  const handleClose = () => {\n    setShowModal(false);\n    setShowCsvModal(false);\n    setCurrentResidents(null); // Reset current item after closing\n  };\n\n  // Handle item edit\n  const handleEdit = item => {\n    setEditMode(true);\n    setCurrentResidents(item);\n    setShowModal(true);\n    // Populate the form with the selected item data\n    setValue(\"name\", item.name);\n    setValue(\"category\", item.category);\n    setValue(\"iddsi_level\", item.iddsi_level);\n  };\n\n  // Handle delete item\n  const handleDelete = async data => {\n    const id = data === null || data === void 0 ? void 0 : data.id;\n    try {\n      await deleteItems(id);\n      setResidentsData(prevItems => prevItems.filter(item => item.id !== id)); // Update state after deletion\n      alert(`Item with ID ${id} deleted successfully.`);\n    } catch (error) {\n      console.error(`Error deleting item with ID ${id}:`, error);\n      alert(`Error deleting item with ID ${id}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: \"Residents Items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResidentsItemToolBar, {\n          handleShow: handleShow,\n          setShowCsvModal: setShowCsvModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), showModal && /*#__PURE__*/_jsxDEV(AddEditResidentsItemForm, {\n          editMode: editMode,\n          handleClose: handleClose,\n          currentResidents: currentResidents // Ensure type is passed correctly\n          ,\n          setResidentsData: setResidentsData,\n          residentsData: residentsData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), showCsvModal && /*#__PURE__*/_jsxDEV(ImportResidentsItemForm, {\n          handleClose: handleClose,\n          fetchResidentsData: fetchResidentsData,\n          residentsData: residentsData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ResidentsItemList, {\n          fetchResidentsData: residentsData,\n          handleEdit: handleEdit,\n          handleDelete: handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading items...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(ResidentsItems, \"/9vywqRfxhFA5v7fnEmYcI5gFbs=\", false, function () {\n  return [useForm, useGetResidentsItemService];\n});\n_c = ResidentsItems;\nexport default ResidentsItems;\nvar _c;\n$RefreshReg$(_c, \"ResidentsItems\");","map":{"version":3,"names":["React","useState","useEffect","useForm","ResidentsItemList","useGetResidentsItemService","ResidentsItemToolBar","AddEditResidentsItemForm","ImportResidentsItemForm","jsxDEV","_jsxDEV","ResidentsItems","_s","setValue","reset","residentsData","setResidentsData","showModal","setShowModal","editMode","setEditMode","currentResidents","setCurrentResidents","showCsvModal","setShowCsvModal","loading","setLoading","getItems","deleteItems","fetchResidentsData","response","items","data","formattedItems","map","item","id","name","category","iddsi_level","error","console","handleShow","handleClose","handleEdit","handleDelete","prevItems","filter","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/practical/src/components/pageComponents/ResidentsItems/ResidentsItems.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { ResidentsData, ResidentsForm } from \"../../../types/ResidentsForm\"; // Import your types\nimport ResidentsItemList from \"./components/ResidentsItemlist\"; // Ensure correct import\nimport useGetResidentsItemService from \"./hooks/useGetResidentsItemService\";\nimport { ResidentsItemToolBar } from \"./components/ResidentsItemToolBar\";\nimport { AddEditResidentsItemForm } from \"./components/AddEditResidentsItemForm\";\nimport { ImportResidentsItemForm } from \"./components/ImportResidentsItemForm\";\n\nconst ResidentsItems: React.FC = () => {\n  const { setValue, reset } = useForm<ResidentsForm>();\n  const [residentsData, setResidentsData] = useState<ResidentsData[]>([]); // Renamed to avoid conflict with the type name\n  const [showModal, setShowModal] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [currentResidents, setCurrentResidents] = useState<ResidentsData | null>(null); // Renamed to 'setCurrentResidents'\n  const [showCsvModal, setShowCsvModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const { getItems, deleteItems } = useGetResidentsItemService();\n\n  // Fetch data dynamically when the component mounts\n  useEffect(() => {\n    fetchResidentsData();\n  }, []);\n\n  // Fetch items data from the backend\n  const fetchResidentsData = async () => {\n    setLoading(true); // Show loading state\n    try {\n      const response = await getItems(); // Adjust based on your service\n      const items = response.data || response;\n      const formattedItems = items.map((item: any) => ({\n        id: item.id,\n        name: item.name,\n        category: item.category,\n        iddsi_level: item.iddsi_level,\n      }));\n      setResidentsData(formattedItems);\n    } catch (error) {\n      console.error(\"Error fetching items data:\", error);\n    } finally {\n      setLoading(false); // Hide loading state\n    }\n  };\n\n  // Handle opening the form modal\n  const handleShow = () => {\n    setShowModal(true);\n    setEditMode(false);\n    reset(); // Clear form fields when adding a new item\n  };\n\n  // Handle closing the modals (both CSV and form modals)\n  const handleClose = () => {\n    setShowModal(false);\n    setShowCsvModal(false);\n    setCurrentResidents(null); // Reset current item after closing\n  };\n\n  // Handle item edit\n  const handleEdit = (item: ResidentsData) => {\n    setEditMode(true);\n    setCurrentResidents(item);\n    setShowModal(true);\n    // Populate the form with the selected item data\n    setValue(\"name\", item.name);\n    setValue(\"category\", item.category);\n    setValue(\"iddsi_level\", item.iddsi_level);\n  };\n\n  // Handle delete item\n  const handleDelete = async (data: ResidentsData) => {\n    const id = data?.id;\n\n    try {\n      await deleteItems(id);\n      setResidentsData((prevItems) => prevItems.filter((item) => item.id !== id)); // Update state after deletion\n      alert(`Item with ID ${id} deleted successfully.`);\n    } catch (error) {\n      console.error(`Error deleting item with ID ${id}:`, error);\n      alert(`Error deleting item with ID ${id}`);\n    }\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-12\">\n          <h2 className=\"text-center\">Residents Items</h2>\n\n          {/* Toolbar for adding new items and importing CSV */}\n          <ResidentsItemToolBar\n            handleShow={handleShow}\n            setShowCsvModal={setShowCsvModal}\n          />\n\n          {/* Modal for Add/Edit Item */}\n          {showModal && (\n            <AddEditResidentsItemForm\n              editMode={editMode}\n              handleClose={handleClose}\n              currentResidents={currentResidents as ResidentsData} // Ensure type is passed correctly\n              setResidentsData={setResidentsData}\n              residentsData={residentsData}\n            />\n          )}\n\n          {/* CSV Upload Modal */}\n          {showCsvModal && (\n            <ImportResidentsItemForm\n              handleClose={handleClose}\n              fetchResidentsData={fetchResidentsData}\n              residentsData={residentsData}\n            />\n          )}\n\n          {/* Display the list of items */}\n          <ResidentsItemList\n            fetchResidentsData={residentsData}\n            handleEdit={handleEdit}\n            handleDelete={handleDelete}\n          />\n\n          {/* Show loading state if data is being fetched */}\n          {loading && <div>Loading items...</div>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ResidentsItems;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,iBAAiB;AACoC;AAC7E,OAAOC,iBAAiB,MAAM,gCAAgC,CAAC,CAAC;AAChE,OAAOC,0BAA0B,MAAM,oCAAoC;AAC3E,SAASC,oBAAoB,QAAQ,mCAAmC;AACxE,SAASC,wBAAwB,QAAQ,uCAAuC;AAChF,SAASC,uBAAuB,QAAQ,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/E,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM;IAAEC,QAAQ;IAAEC;EAAM,CAAC,GAAGX,OAAO,CAAgB,CAAC;EACpD,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAkB,EAAE,CAAC,CAAC,CAAC;EACzE,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACoB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrB,QAAQ,CAAuB,IAAI,CAAC,CAAC,CAAC;EACtF,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAM;IAAE0B,QAAQ;IAAEC;EAAY,CAAC,GAAGvB,0BAA0B,CAAC,CAAC;;EAE9D;EACAH,SAAS,CAAC,MAAM;IACd2B,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrCH,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMH,QAAQ,CAAC,CAAC,CAAC,CAAC;MACnC,MAAMI,KAAK,GAAGD,QAAQ,CAACE,IAAI,IAAIF,QAAQ;MACvC,MAAMG,cAAc,GAAGF,KAAK,CAACG,GAAG,CAAEC,IAAS,KAAM;QAC/CC,EAAE,EAAED,IAAI,CAACC,EAAE;QACXC,IAAI,EAAEF,IAAI,CAACE,IAAI;QACfC,QAAQ,EAAEH,IAAI,CAACG,QAAQ;QACvBC,WAAW,EAAEJ,IAAI,CAACI;MACpB,CAAC,CAAC,CAAC;MACHvB,gBAAgB,CAACiB,cAAc,CAAC;IAClC,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,SAAS;MACRd,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMgB,UAAU,GAAGA,CAAA,KAAM;IACvBxB,YAAY,CAAC,IAAI,CAAC;IAClBE,WAAW,CAAC,KAAK,CAAC;IAClBN,KAAK,CAAC,CAAC,CAAC,CAAC;EACX,CAAC;;EAED;EACA,MAAM6B,WAAW,GAAGA,CAAA,KAAM;IACxBzB,YAAY,CAAC,KAAK,CAAC;IACnBM,eAAe,CAAC,KAAK,CAAC;IACtBF,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC7B,CAAC;;EAED;EACA,MAAMsB,UAAU,GAAIT,IAAmB,IAAK;IAC1Cf,WAAW,CAAC,IAAI,CAAC;IACjBE,mBAAmB,CAACa,IAAI,CAAC;IACzBjB,YAAY,CAAC,IAAI,CAAC;IAClB;IACAL,QAAQ,CAAC,MAAM,EAAEsB,IAAI,CAACE,IAAI,CAAC;IAC3BxB,QAAQ,CAAC,UAAU,EAAEsB,IAAI,CAACG,QAAQ,CAAC;IACnCzB,QAAQ,CAAC,aAAa,EAAEsB,IAAI,CAACI,WAAW,CAAC;EAC3C,CAAC;;EAED;EACA,MAAMM,YAAY,GAAG,MAAOb,IAAmB,IAAK;IAClD,MAAMI,EAAE,GAAGJ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,EAAE;IAEnB,IAAI;MACF,MAAMR,WAAW,CAACQ,EAAE,CAAC;MACrBpB,gBAAgB,CAAE8B,SAAS,IAAKA,SAAS,CAACC,MAAM,CAAEZ,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC,CAAC,CAAC,CAAC;MAC7EY,KAAK,CAAC,gBAAgBZ,EAAE,wBAAwB,CAAC;IACnD,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+BJ,EAAE,GAAG,EAAEI,KAAK,CAAC;MAC1DQ,KAAK,CAAC,+BAA+BZ,EAAE,EAAE,CAAC;IAC5C;EACF,CAAC;EAED,oBACE1B,OAAA;IAAKuC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BxC,OAAA;MAAKuC,SAAS,EAAC,4BAA4B;MAAAC,QAAA,eACzCxC,OAAA;QAAKuC,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBxC,OAAA;UAAIuC,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAGhD5C,OAAA,CAACJ,oBAAoB;UACnBoC,UAAU,EAAEA,UAAW;UACvBlB,eAAe,EAAEA;QAAgB;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,EAGDrC,SAAS,iBACRP,OAAA,CAACH,wBAAwB;UACvBY,QAAQ,EAAEA,QAAS;UACnBwB,WAAW,EAAEA,WAAY;UACzBtB,gBAAgB,EAAEA,gBAAkC,CAAC;UAAA;UACrDL,gBAAgB,EAAEA,gBAAiB;UACnCD,aAAa,EAAEA;QAAc;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CACF,EAGA/B,YAAY,iBACXb,OAAA,CAACF,uBAAuB;UACtBmC,WAAW,EAAEA,WAAY;UACzBd,kBAAkB,EAAEA,kBAAmB;UACvCd,aAAa,EAAEA;QAAc;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CACF,eAGD5C,OAAA,CAACN,iBAAiB;UAChByB,kBAAkB,EAAEd,aAAc;UAClC6B,UAAU,EAAEA,UAAW;UACvBC,YAAY,EAAEA;QAAa;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,EAGD7B,OAAO,iBAAIf,OAAA;UAAAwC,QAAA,EAAK;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1C,EAAA,CAxHID,cAAwB;EAAA,QACAR,OAAO,EAQDE,0BAA0B;AAAA;AAAAkD,EAAA,GATxD5C,cAAwB;AA0H9B,eAAeA,cAAc;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}