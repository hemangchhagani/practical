{"ast":null,"code":"var _jsxFileName = \"/Users/ajaykumarmarko/Desktop/practical/src/components/pageComponents/FoodItems/components/FoodItemlist.tsx\";\nimport React from 'react';\nimport DataTable from 'react-data-table-component';\n\n// Adjust import as necessary\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Import your types\n\nconst FoodItemlist = ({\n  itemsData = []\n}) => {\n  // Edit item handler\n  const handleEdit = item => {};\n  // Delete item handler\n  const handleDelete = async id => {};\n  return /*#__PURE__*/_jsxDEV(DataTable, {\n    title: \"Items List\",\n    columns: [{\n      name: 'ID',\n      selector: row => row.id,\n      sortable: true\n    }, {\n      name: 'Name',\n      selector: row => row.name,\n      sortable: true\n    }, {\n      name: 'Category',\n      selector: row => row.category,\n      sortable: true\n    }, {\n      name: 'IDDSI Level',\n      selector: row => row.iddsi_level,\n      sortable: true\n    }, {\n      name: 'Actions',\n      cell: row => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary mr-2\",\n          onClick: () => handleEdit(row),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger\",\n          onClick: () => handleDelete(row.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true),\n      ignoreRowClick: true // Keep this if you want to prevent row clicks from firing\n    }],\n    data: itemsData,\n    pagination: true,\n    selectableRows: true,\n    highlightOnHover: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = FoodItemlist;\nexport default FoodItemlist; // Ensure this export is present\nvar _c;\n$RefreshReg$(_c, \"FoodItemlist\");","map":{"version":3,"names":["React","DataTable","jsxDEV","_jsxDEV","Fragment","_Fragment","FoodItemlist","itemsData","handleEdit","item","handleDelete","id","title","columns","name","selector","row","sortable","category","iddsi_level","cell","children","type","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ignoreRowClick","data","pagination","selectableRows","highlightOnHover","_c","$RefreshReg$"],"sources":["/Users/ajaykumarmarko/Desktop/practical/src/components/pageComponents/FoodItems/components/FoodItemlist.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\nimport { useForm } from 'react-hook-form';\nimport useGetFoodItemService from '../hooks/useGetFoodItemService'; // Adjust import as necessary\nimport Papa from 'papaparse';\nimport { ItemData, ItemsForm } from '../../../../types/ItemsForm'; // Import your types\n\nconst FoodItemlist: React.FC = ({itemsData=[]}:{itemsData?:ItemData[]}) => {\n  \n    // Edit item handler\n  const handleEdit = (item: ItemData) => {\n    \n  };\n   // Delete item handler\n  const handleDelete = async (id: number) => {\n    \n  };\n\n\n  return (\n    <DataTable\n    title=\"Items List\"\n    columns={[\n    {\n      name: 'ID',\n      selector: (row: ItemData) => row.id,\n      sortable: true,\n    },\n    {\n      name: 'Name',\n      selector: (row: ItemData) => row.name,\n      sortable: true,\n    },\n    {\n      name: 'Category',\n      selector: (row: ItemData) => row.category,\n      sortable: true,\n    },\n    {\n      name: 'IDDSI Level',\n      selector: (row: ItemData) => row.iddsi_level,\n      sortable: true,\n    },\n    {\n      name: 'Actions',\n      cell: (row: ItemData) => (\n        <>\n        <button\n        type=\"button\"\n        className=\"btn btn-primary mr-2\"\n        onClick={() => handleEdit(row)}\n        >\n        Edit\n        </button>\n        <button\n        type=\"button\"\n        className=\"btn btn-danger\"\n        onClick={() => handleDelete(row.id)}\n        >\n        Delete\n        </button>\n        </>\n        ),\n      ignoreRowClick: true, // Keep this if you want to prevent row clicks from firing\n    },\n    ]}\n    data={itemsData}\n    pagination\n    selectableRows\n    highlightOnHover\n    />\n    );\n};\n\nexport default FoodItemlist; // Ensure this export is present\n"],"mappings":";AAAA,OAAOA,KAAK,MAA+B,OAAO;AAClD,OAAOC,SAAS,MAAM,4BAA4B;;AAEkB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAED;;AAEnE,MAAMC,YAAsB,GAAGA,CAAC;EAACC,SAAS,GAAC;AAA0B,CAAC,KAAK;EAEvE;EACF,MAAMC,UAAU,GAAIC,IAAc,IAAK,CAEvC,CAAC;EACA;EACD,MAAMC,YAAY,GAAG,MAAOC,EAAU,IAAK,CAE3C,CAAC;EAGD,oBACER,OAAA,CAACF,SAAS;IACVW,KAAK,EAAC,YAAY;IAClBC,OAAO,EAAE,CACT;MACEC,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAGC,GAAa,IAAKA,GAAG,CAACL,EAAE;MACnCM,QAAQ,EAAE;IACZ,CAAC,EACD;MACEH,IAAI,EAAE,MAAM;MACZC,QAAQ,EAAGC,GAAa,IAAKA,GAAG,CAACF,IAAI;MACrCG,QAAQ,EAAE;IACZ,CAAC,EACD;MACEH,IAAI,EAAE,UAAU;MAChBC,QAAQ,EAAGC,GAAa,IAAKA,GAAG,CAACE,QAAQ;MACzCD,QAAQ,EAAE;IACZ,CAAC,EACD;MACEH,IAAI,EAAE,aAAa;MACnBC,QAAQ,EAAGC,GAAa,IAAKA,GAAG,CAACG,WAAW;MAC5CF,QAAQ,EAAE;IACZ,CAAC,EACD;MACEH,IAAI,EAAE,SAAS;MACfM,IAAI,EAAGJ,GAAa,iBAClBb,OAAA,CAAAE,SAAA;QAAAgB,QAAA,gBACAlB,OAAA;UACAmB,IAAI,EAAC,QAAQ;UACbC,SAAS,EAAC,sBAAsB;UAChCC,OAAO,EAAEA,CAAA,KAAMhB,UAAU,CAACQ,GAAG,CAAE;UAAAK,QAAA,EAC9B;QAED;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTzB,OAAA;UACAmB,IAAI,EAAC,QAAQ;UACbC,SAAS,EAAC,gBAAgB;UAC1BC,OAAO,EAAEA,CAAA,KAAMd,YAAY,CAACM,GAAG,CAACL,EAAE,CAAE;UAAAU,QAAA,EACnC;QAED;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,eACP,CACD;MACHC,cAAc,EAAE,IAAI,CAAE;IACxB,CAAC,CACC;IACFC,IAAI,EAAEvB,SAAU;IAChBwB,UAAU;IACVC,cAAc;IACdC,gBAAgB;EAAA;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEN,CAAC;AAACM,EAAA,GAjEI5B,YAAsB;AAmE5B,eAAeA,YAAY,CAAC,CAAC;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}