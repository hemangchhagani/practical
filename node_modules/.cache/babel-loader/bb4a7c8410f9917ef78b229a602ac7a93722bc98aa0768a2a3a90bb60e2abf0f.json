{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hemang\\\\Desktop\\\\practical\\\\src\\\\components\\\\pages\\\\Register.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport AuthService from '../../services/AuthService';\n// Correct import\n\n// Define an interface for the expected error structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [serverError, setServerError] = React.useState(null); // State for server error messages\n\n  const onSubmit = async data => {\n    try {\n      var _res$status, _res$data;\n      const res = await AuthService.register(data.username, data.email, data.password);\n\n      // Check the actual structure of the response object\n      console.log(\"API Response:\", res);\n\n      // Attempt different status checks based on common API response structures\n      const status = (_res$status = res === null || res === void 0 ? void 0 : res.status) !== null && _res$status !== void 0 ? _res$status : res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.status;\n      if (status === 201) {\n        alert('Registration successful!');\n        // Optionally, redirect to login or another page here\n      } else {\n        var _ref, _res$message, _res$data2;\n        // Handle non-201 status codes\n        const message = (_ref = (_res$message = res === null || res === void 0 ? void 0 : res.message) !== null && _res$message !== void 0 ? _res$message : res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.message) !== null && _ref !== void 0 ? _ref : 'Something went wrong';\n        alert('Error: ' + message);\n      }\n      if (res.status == 201) {\n        alert('Registration successful!');\n        // Optionally, redirect to login or another page here\n      } else {\n        // Handle non-201 status codes\n        alert('Error: ' + (res.message || 'Something went wrong'));\n      }\n      // Optionally, redirect to login or another page here\n    } catch (error) {\n      console.error('Error during registration:', error);\n\n      // Use type assertion to access the error response\n      const apiError = error;\n      if (apiError.response && apiError.response.data.message) {\n        setServerError(apiError.response.data.message); // Set server error message if exists\n      } else {\n        setServerError('An unknown error occurred.'); // Fallback error message\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register('username', {\n                required: true\n              }),\n              type: \"text\",\n              className: \"form-control\",\n              id: \"username\",\n              placeholder: \"Enter your username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), errors.username && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register('email', {\n                required: true\n              }),\n              type: \"email\",\n              className: \"form-control\",\n              id: \"email\",\n              placeholder: \"Enter your email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register('password', {\n                required: true\n              }),\n              type: \"password\",\n              className: \"form-control\",\n              id: \"password\",\n              placeholder: \"Enter your password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), serverError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger mb-3\",\n            children: serverError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary w-100\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12 mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            className: \"btn-primary\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"9iONf6EZceUw7gmKzEvB0HMrEv8=\", false, function () {\n  return [useForm];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useForm","AuthService","jsxDEV","_jsxDEV","Register","_s","register","handleSubmit","formState","errors","serverError","setServerError","useState","onSubmit","data","_res$status","_res$data","res","username","email","password","console","log","status","alert","_ref","_res$message","_res$data2","message","error","apiError","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","required","type","id","placeholder","href","_c","$RefreshReg$"],"sources":["C:/Users/Hemang/Desktop/practical/src/components/pages/Register.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport AuthService from '../../services/AuthService';\r\nimport { IRegisterForm } from '../../types/index';  // Correct import\r\n\r\n// Define an interface for the expected error structure\r\ninterface ApiError {\r\n  response?: {\r\n    data: {\r\n      message: string;\r\n      status: number;\r\n    };\r\n  };\r\n}\r\n\r\ninterface ApiResponse {\r\n  status: number;\r\n  message?: string;\r\n  data?: any;\r\n}\r\n\r\nconst Register: React.FC = () => {\r\n  const { register, handleSubmit, formState: { errors } } = useForm<IRegisterForm>();\r\n  const [serverError, setServerError] = React.useState<string | null>(null); // State for server error messages\r\n\r\n  const onSubmit = async (data: IRegisterForm) => {\r\n    try {\r\n      const res: ApiResponse = await AuthService.register(data.username, data.email, data.password);\r\n     \r\n    // Check the actual structure of the response object\r\n    console.log(\"API Response:\", res);\r\n\r\n    // Attempt different status checks based on common API response structures\r\n    const status = res?.status ?? res?.data?.status;\r\n\r\n    if (status === 201) {\r\n      alert('Registration successful!');\r\n      // Optionally, redirect to login or another page here\r\n    } else {\r\n      // Handle non-201 status codes\r\n      const message = res?.message ?? res?.data?.message ?? 'Something went wrong';\r\n      alert('Error: ' + message);\r\n    }\r\n    if (res.status == 201) {\r\n      alert('Registration successful!');\r\n      // Optionally, redirect to login or another page here\r\n    } else {\r\n      // Handle non-201 status codes\r\n      alert('Error: ' + (res.message || 'Something went wrong'));\r\n    }\r\n      // Optionally, redirect to login or another page here\r\n    } catch (error) {\r\n      console.error('Error during registration:', error);\r\n      \r\n      // Use type assertion to access the error response\r\n      const apiError = error as ApiError;\r\n\r\n      if (apiError.response && apiError.response.data.message) {\r\n        setServerError(apiError.response.data.message); // Set server error message if exists\r\n      } else {\r\n        setServerError('An unknown error occurred.'); // Fallback error message\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-6\">\r\n          <h2 className=\"text-center mb-4\">Register</h2>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            {/* Name Field */}\r\n            <div className=\"form-group mb-3\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <input\r\n                {...register('username', { required: true })}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"username\"\r\n                placeholder=\"Enter your username\"\r\n              />\r\n              {errors.username && <span className=\"text-danger\">This field is required</span>}\r\n            </div>\r\n            {/* Email Field */}\r\n            <div className=\"form-group mb-3\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                {...register('email', { required: true })}\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"email\"\r\n                placeholder=\"Enter your email\"\r\n              />\r\n              {errors.email && <span className=\"text-danger\">This field is required</span>}\r\n            </div>\r\n            {/* Password Field */}\r\n            <div className=\"form-group mb-3\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                {...register('password', { required: true })}\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"password\"\r\n                placeholder=\"Enter your password\"\r\n              />\r\n              {errors.password && <span className=\"text-danger\">This field is required</span>}\r\n            </div>\r\n            \r\n            {/* Server Error Message */}\r\n            {serverError && <div className=\"text-danger mb-3\">{serverError}</div>}\r\n\r\n            {/* Submit Button */}\r\n            <button type=\"submit\" className=\"btn btn-primary w-100\">Register</button>\r\n          </form>\r\n          <div className='col-md-12 mt-3'>\r\n            <a href='/' className=\"btn-primary\">Login</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}