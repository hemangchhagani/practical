{"ast":null,"code":"var _jsxFileName = \"D:\\\\practical\\\\src\\\\components\\\\pages\\\\Items.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\nimport { useForm } from 'react-hook-form';\nimport ItemService from '../../services/ItemService'; // Adjust import as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Import your types\n\nconst Items = () => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [itemsData, setItemsData] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [currentItem, setCurrentItem] = useState(null);\n  const [showCsvModal, setShowCsvModal] = useState(false);\n\n  // Fetch data dynamically when the component mounts\n  useEffect(() => {\n    fetchItemsData();\n  }, []);\n  const fetchItemsData = async () => {\n    try {\n      const response = await ItemService.getItems(); // Adjust based on your service\n      const items = response.data || response;\n      const formattedItems = items.map(item => ({\n        id: item.id,\n        name: item.name,\n        category: item.category,\n        iddsi_level: item.iddsi_level\n      }));\n      setItemsData(formattedItems);\n    } catch (error) {\n      console.error('Error fetching items data:', error);\n    }\n  };\n\n  // Handle form submission\n  const onSubmit = async data => {\n    // Your logic for submitting data\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Items List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      title: \"Items List\",\n      columns: [\n        // Your columns here\n      ],\n      data: itemsData,\n      pagination: true,\n      selectableRows: true,\n      highlightOnHover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Items, \"jM50q0IS7Aq6zFNMTSzWbAMwqIo=\", false, function () {\n  return [useForm];\n});\n_c = Items;\nexport default Items; // Ensure this export is present\nvar _c;\n$RefreshReg$(_c, \"Items\");","map":{"version":3,"names":["React","useState","useEffect","DataTable","useForm","ItemService","jsxDEV","_jsxDEV","Items","_s","register","handleSubmit","setValue","formState","errors","itemsData","setItemsData","showModal","setShowModal","editMode","setEditMode","currentItem","setCurrentItem","showCsvModal","setShowCsvModal","fetchItemsData","response","getItems","items","data","formattedItems","map","item","id","name","category","iddsi_level","error","console","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","columns","pagination","selectableRows","highlightOnHover","_c","$RefreshReg$"],"sources":["D:/practical/src/components/pages/Items.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\nimport { useForm } from 'react-hook-form';\nimport ItemService from '../../services/ItemService'; // Adjust import as necessary\nimport Papa from 'papaparse';\nimport { ItemData, ItemsForm } from '../../types/ItemsForm'; // Import your types\n\nconst Items: React.FC = () => {\n  const { register, handleSubmit, setValue, formState: { errors } } = useForm<ItemsForm>();\n  const [itemsData, setItemsData] = useState<ItemData[]>([]);\n  const [showModal, setShowModal] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [currentItem, setCurrentItem] = useState<ItemData | null>(null);\n  const [showCsvModal, setShowCsvModal] = useState(false);\n\n  // Fetch data dynamically when the component mounts\n  useEffect(() => {\n    fetchItemsData();\n  }, []);\n\n  const fetchItemsData = async () => {\n    try {\n      const response = await ItemService.getItems(); // Adjust based on your service\n      const items = response.data || response;\n      const formattedItems = items.map((item: any) => ({\n        id: item.id,\n        name: item.name,\n        category: item.category,\n        iddsi_level: item.iddsi_level,\n      }));\n      setItemsData(formattedItems);\n    } catch (error) {\n      console.error('Error fetching items data:', error);\n    }\n  };\n\n  // Handle form submission\n  const onSubmit = async (data: ItemsForm) => {\n    // Your logic for submitting data\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <h2 className=\"text-center\">Items List</h2>\n      <DataTable\n        title=\"Items List\"\n        columns={[\n          // Your columns here\n        ]}\n        data={itemsData}\n        pagination\n        selectableRows\n        highlightOnHover\n      />\n      {/* Add other JSX elements, modals, etc. */}\n    </div>\n  );\n};\n\nexport default Items; // Ensure this export is present\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,WAAW,MAAM,4BAA4B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEO;;AAE7D,MAAMC,KAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC,QAAQ;IAAEC,YAAY;IAAEC,QAAQ;IAAEC,SAAS,EAAE;MAAEC;IAAO;EAAE,CAAC,GAAGV,OAAO,CAAY,CAAC;EACxF,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAa,EAAE,CAAC;EAC1D,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAkB,IAAI,CAAC;EACrE,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;;EAEvD;EACAC,SAAS,CAAC,MAAM;IACduB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMrB,WAAW,CAACsB,QAAQ,CAAC,CAAC,CAAC,CAAC;MAC/C,MAAMC,KAAK,GAAGF,QAAQ,CAACG,IAAI,IAAIH,QAAQ;MACvC,MAAMI,cAAc,GAAGF,KAAK,CAACG,GAAG,CAAEC,IAAS,KAAM;QAC/CC,EAAE,EAAED,IAAI,CAACC,EAAE;QACXC,IAAI,EAAEF,IAAI,CAACE,IAAI;QACfC,QAAQ,EAAEH,IAAI,CAACG,QAAQ;QACvBC,WAAW,EAAEJ,IAAI,CAACI;MACpB,CAAC,CAAC,CAAC;MACHpB,YAAY,CAACc,cAAc,CAAC;IAC9B,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;;EAED;EACA,MAAME,QAAQ,GAAG,MAAOV,IAAe,IAAK;IAC1C;EAAA,CACD;EAED,oBACEtB,OAAA;IAAKiC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BlC,OAAA;MAAIiC,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3CtC,OAAA,CAACJ,SAAS;MACR2C,KAAK,EAAC,YAAY;MAClBC,OAAO,EAAE;QACP;MAAA,CACA;MACFlB,IAAI,EAAEd,SAAU;MAChBiC,UAAU;MACVC,cAAc;MACdC,gBAAgB;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEV,CAAC;AAACpC,EAAA,CAlDID,KAAe;EAAA,QACiDJ,OAAO;AAAA;AAAA+C,EAAA,GADvE3C,KAAe;AAoDrB,eAAeA,KAAK,CAAC,CAAC;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}