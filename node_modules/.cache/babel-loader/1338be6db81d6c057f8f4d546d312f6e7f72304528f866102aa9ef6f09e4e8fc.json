{"ast":null,"code":"var _jsxFileName = \"D:\\\\practical\\\\src\\\\components\\\\pageComponents\\\\ResidentsItems\\\\ResidentsItems.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\n// Import your types\nimport FoodItemlist from \"./components/FoodItemlist\";\nimport useGetFoodItemService from \"./hooks/useGetFoodItemService\";\nimport { FoodItemToolBar } from \"./components/FoodItemToolBar\";\nimport { AddEditFoodItemForm } from \"./components/AddEditFoodItemForm\";\nimport { ImportFoodItemForm } from \"./components/ImportFoodItemForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FoodItems = () => {\n  _s();\n  const {\n    setValue,\n    reset\n  } = useForm();\n  const [itemsData, setItemsData] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [currentItem, setCurrentItem] = useState(null);\n  const [showCsvModal, setShowCsvModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const {\n    getItems,\n    deleteItems\n  } = useGetFoodItemService();\n\n  // Fetch data dynamically when the component mounts\n  useEffect(() => {\n    fetchItemsData();\n  }, []);\n\n  // Fetch items data from the backend\n  const fetchItemsData = async () => {\n    setLoading(true); // Show loading state\n    try {\n      const response = await getItems(); // Adjust based on your service\n      const items = response.data || response;\n      const formattedItems = items.map(item => ({\n        id: item.id,\n        name: item.name,\n        category: item.category,\n        iddsi_level: item.iddsi_level\n      }));\n      setItemsData(formattedItems);\n    } catch (error) {\n      console.error(\"Error fetching items data:\", error);\n    } finally {\n      setLoading(false); // Hide loading state\n    }\n  };\n\n  // Handle opening the form modal\n  const handleShow = () => {\n    setShowModal(true);\n    setEditMode(false);\n    reset(); // Clear form fields when adding a new item\n  };\n\n  // Handle closing the modals (both CSV and form modals)\n  const handleClose = () => {\n    setShowModal(false);\n    setShowCsvModal(false);\n    setCurrentItem(null);\n  };\n\n  // Handle item edit\n  const handleEdit = item => {\n    setEditMode(true);\n    setCurrentItem(item);\n    setShowModal(true);\n    setValue(\"name\", item.name);\n    setValue(\"category\", item.category);\n    setValue(\"iddsi_level\", item.iddsi_level);\n  };\n\n  // Handle delete item\n  const handleDelete = async data => {\n    const id = data === null || data === void 0 ? void 0 : data.id;\n    try {\n      await deleteItems(id);\n      setItemsData(prevItems => prevItems.filter(item => item.id !== id)); // Update state\n      alert(`Item with ID ${id} deleted successfully.`);\n    } catch (error) {\n      console.error(`Error deleting item with ID ${id}:`, error);\n      alert(`Error deleting item with ID ${id}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: \"Items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FoodItemToolBar, {\n          handleShow: handleShow,\n          setShowCsvModal: setShowCsvModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), showModal && /*#__PURE__*/_jsxDEV(AddEditFoodItemForm, {\n          editMode: editMode,\n          handleClose: handleClose,\n          currentItem: currentItem,\n          setItemsData: setItemsData,\n          itemsData: itemsData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), showCsvModal && /*#__PURE__*/_jsxDEV(ImportFoodItemForm, {\n          handleClose: handleClose,\n          fetchItemsData: fetchItemsData,\n          itemsData: itemsData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FoodItemlist, {\n          itemsData: itemsData,\n          handleEdit: handleEdit,\n          handleDelete: handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading items...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(FoodItems, \"CrrGlDjIr7vnRXUzObFms5+JkKw=\", false, function () {\n  return [useForm, useGetFoodItemService];\n});\n_c = FoodItems;\nexport default FoodItems;\nvar _c;\n$RefreshReg$(_c, \"FoodItems\");","map":{"version":3,"names":["React","useState","useEffect","useForm","FoodItemlist","useGetFoodItemService","FoodItemToolBar","AddEditFoodItemForm","ImportFoodItemForm","jsxDEV","_jsxDEV","FoodItems","_s","setValue","reset","itemsData","setItemsData","showModal","setShowModal","editMode","setEditMode","currentItem","setCurrentItem","showCsvModal","setShowCsvModal","loading","setLoading","getItems","deleteItems","fetchItemsData","response","items","data","formattedItems","map","item","id","name","category","iddsi_level","error","console","handleShow","handleClose","handleEdit","handleDelete","prevItems","filter","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/practical/src/components/pageComponents/ResidentsItems/ResidentsItems.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { ItemData, ItemsForm } from \"../../../types/ItemsForm\"; // Import your types\nimport FoodItemlist from \"./components/FoodItemlist\";\nimport useGetFoodItemService from \"./hooks/useGetFoodItemService\";\nimport { FoodItemToolBar } from \"./components/FoodItemToolBar\";\nimport { AddEditFoodItemForm } from \"./components/AddEditFoodItemForm\";\nimport { ImportFoodItemForm } from \"./components/ImportFoodItemForm\";\n\nconst FoodItems: React.FC = () => {\n  const { setValue, reset } = useForm<ItemsForm>();\n  const [itemsData, setItemsData] = useState<ItemData[]>([]);\n  const [showModal, setShowModal] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [currentItem, setCurrentItem] = useState<ItemData | null>(null);\n  const [showCsvModal, setShowCsvModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const { getItems, deleteItems } = useGetFoodItemService();\n\n  // Fetch data dynamically when the component mounts\n  useEffect(() => {\n    fetchItemsData();\n  }, []);\n\n  // Fetch items data from the backend\n  const fetchItemsData = async () => {\n    setLoading(true); // Show loading state\n    try {\n      const response = await getItems(); // Adjust based on your service\n      const items = response.data || response;\n      const formattedItems = items.map((item: any) => ({\n        id: item.id,\n        name: item.name,\n        category: item.category,\n        iddsi_level: item.iddsi_level,\n      }));\n      setItemsData(formattedItems);\n    } catch (error) {\n      console.error(\"Error fetching items data:\", error);\n    } finally {\n      setLoading(false); // Hide loading state\n    }\n  };\n\n  // Handle opening the form modal\n  const handleShow = () => {\n    setShowModal(true);\n    setEditMode(false);\n    reset(); // Clear form fields when adding a new item\n  };\n\n  // Handle closing the modals (both CSV and form modals)\n  const handleClose = () => {\n    setShowModal(false);\n    setShowCsvModal(false);\n    setCurrentItem(null);\n  };\n\n  // Handle item edit\n  const handleEdit = (item: ItemData) => {\n    setEditMode(true);\n    setCurrentItem(item);\n    setShowModal(true);\n    setValue(\"name\", item.name);\n    setValue(\"category\", item.category);\n    setValue(\"iddsi_level\", item.iddsi_level);\n  };\n\n  // Handle delete item\n  const handleDelete = async (data: ItemData) => {\n    const id = data?.id;\n\n    try {\n      await deleteItems(id);\n      setItemsData((prevItems) => prevItems.filter((item) => item.id !== id)); // Update state\n      alert(`Item with ID ${id} deleted successfully.`);\n    } catch (error) {\n      console.error(`Error deleting item with ID ${id}:`, error);\n      alert(`Error deleting item with ID ${id}`);\n    }\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-12\">\n          <h2 className=\"text-center\">Items</h2>\n\n          <FoodItemToolBar\n            handleShow={handleShow}\n            setShowCsvModal={setShowCsvModal}\n          />\n\n          {/* Modal for Add/Edit Item */}\n          {showModal && (\n            <AddEditFoodItemForm\n              editMode={editMode}\n              handleClose={handleClose}\n              currentItem={currentItem as ItemData}\n              setItemsData={setItemsData}\n              itemsData={itemsData}\n            />\n          )}\n\n          {/* CSV Upload Modal */}\n          {showCsvModal && (\n            <ImportFoodItemForm\n              handleClose={handleClose}\n              fetchItemsData={fetchItemsData}\n              itemsData={itemsData}\n            />\n          )}\n\n          {/* Display the list of items */}\n          <FoodItemlist\n            itemsData={itemsData as ItemData[]}\n            handleEdit={handleEdit}\n            handleDelete={handleDelete}\n          />\n\n          {/* Show loading state if data is being fetched */}\n          {loading && <div>Loading items...</div>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FoodItems;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}