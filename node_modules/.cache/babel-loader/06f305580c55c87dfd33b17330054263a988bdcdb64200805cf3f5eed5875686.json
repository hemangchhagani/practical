{"ast":null,"code":"var _jsxFileName = \"/Users/ajaykumarmarko/Desktop/practical/src/components/pageComponents/FoodItems/components/FoodItemlist.tsx\";\nimport React from \"react\";\nimport DataTable from \"react-data-table-component\";\n\n// Adjust import as necessary\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Import your types\n\nconst FoodItemlist = ({\n  itemsData = []\n}) => {\n  // Handle item edit\n  const handleEdit = item => {\n    setEditMode(true);\n    setCurrentItem(item);\n    setShowModal(true);\n    setValue(\"name\", item.name);\n    setValue(\"category\", item.category);\n    setValue(\"iddsi_level\", item.iddsi_level);\n  };\n\n  // Handle delete item\n  const handleDelete = async id => {\n    try {\n      await deleteItems(id);\n      setItemsData(prevItems => prevItems.filter(item => item.id !== id)); // Update state\n      alert(`Item with ID ${id} deleted successfully.`);\n    } catch (error) {\n      console.error(`Error deleting item with ID ${id}:`, error);\n      alert(`Error deleting item with ID ${id}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DataTable, {\n    title: \"Items List\",\n    columns: [{\n      name: \"ID\",\n      selector: row => row.id,\n      sortable: true\n    }, {\n      name: \"Name\",\n      selector: row => row.name,\n      sortable: true\n    }, {\n      name: \"Category\",\n      selector: row => row.category,\n      sortable: true\n    }, {\n      name: \"IDDSI Level\",\n      selector: row => row.iddsi_level,\n      sortable: true\n    }, {\n      name: \"Actions\",\n      cell: row => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary mr-2\",\n          onClick: () => handleEdit(row),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger\",\n          onClick: () => handleDelete(row.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true),\n      ignoreRowClick: true // Keep this if you want to prevent row clicks from firing\n    }],\n    data: itemsData,\n    pagination: true,\n    selectableRows: true,\n    highlightOnHover: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = FoodItemlist;\nexport default FoodItemlist; // Ensure this export is present\nvar _c;\n$RefreshReg$(_c, \"FoodItemlist\");","map":{"version":3,"names":["React","DataTable","jsxDEV","_jsxDEV","Fragment","_Fragment","FoodItemlist","itemsData","handleEdit","item","setEditMode","setCurrentItem","setShowModal","setValue","name","category","iddsi_level","handleDelete","id","deleteItems","setItemsData","prevItems","filter","alert","error","console","title","columns","selector","row","sortable","cell","children","type","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ignoreRowClick","data","pagination","selectableRows","highlightOnHover","_c","$RefreshReg$"],"sources":["/Users/ajaykumarmarko/Desktop/practical/src/components/pageComponents/FoodItems/components/FoodItemlist.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DataTable from \"react-data-table-component\";\nimport { useForm } from \"react-hook-form\";\nimport useGetFoodItemService from \"../hooks/useGetFoodItemService\"; // Adjust import as necessary\nimport Papa from \"papaparse\";\nimport { ItemData, ItemsForm } from \"../../../../types/ItemsForm\"; // Import your types\n\nconst FoodItemlist = ({ itemsData = [] }: { itemsData?: ItemData[] }) => {\n  // Handle item edit\n  const handleEdit = (item: ItemData) => {\n    setEditMode(true);\n    setCurrentItem(item);\n    setShowModal(true);\n    setValue(\"name\", item.name);\n    setValue(\"category\", item.category);\n    setValue(\"iddsi_level\", item.iddsi_level);\n  };\n\n  // Handle delete item\n  const handleDelete = async (id: number) => {\n    try {\n      await deleteItems(id);\n      setItemsData((prevItems) => prevItems.filter((item) => item.id !== id)); // Update state\n      alert(`Item with ID ${id} deleted successfully.`);\n    } catch (error) {\n      console.error(`Error deleting item with ID ${id}:`, error);\n      alert(`Error deleting item with ID ${id}`);\n    }\n  };\n\n  return (\n    <DataTable\n      title=\"Items List\"\n      columns={[\n        {\n          name: \"ID\",\n          selector: (row: ItemData) => row.id,\n          sortable: true,\n        },\n        {\n          name: \"Name\",\n          selector: (row: ItemData) => row.name,\n          sortable: true,\n        },\n        {\n          name: \"Category\",\n          selector: (row: ItemData) => row.category,\n          sortable: true,\n        },\n        {\n          name: \"IDDSI Level\",\n          selector: (row: ItemData) => row.iddsi_level,\n          sortable: true,\n        },\n        {\n          name: \"Actions\",\n          cell: (row: ItemData) => (\n            <>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary mr-2\"\n                onClick={() => handleEdit(row)}\n              >\n                Edit\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                onClick={() => handleDelete(row.id)}\n              >\n                Delete\n              </button>\n            </>\n          ),\n          ignoreRowClick: true, // Keep this if you want to prevent row clicks from firing\n        },\n      ]}\n      data={itemsData}\n      pagination\n      selectableRows\n      highlightOnHover\n    />\n  );\n};\n\nexport default FoodItemlist; // Ensure this export is present\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}